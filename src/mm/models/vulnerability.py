from pydantic import BaseModel, Field
import re


class Vulnerability(BaseModel):
    id: str
    releaseDate: str = ""
    cveNumber: str = ""
    cveTitle: str = ""
    releaseNumber: str = ""
    vulnType: str = ""
    latestRevisionDate: str = ""
    description: str = ""
    mitreText: str = ""
    mitreUrl: str = ""
    publiclyDisclosed: str = ""
    exploited: str = ""
    latestSoftwareReleaseId: int = 0
    latestSoftwareRelease: str = ""
    olderSoftwareReleaseId: int = 0
    olderSoftwareRelease: str = ""
    denialOfService: str = ""
    tag: str = ""
    issuingCna: str = ""
    severityId: int = 0
    impactId: int = 0
    severity: str = ""
    impact: str = ""
    vectorString: str = ""
    baseScore: str = ""
    temporalScore: str = ""

    def get_av(self):
        av = re.search(r'.*AV:(.*?)\/', self.vectorString)
        if av:
            return av.group(1)
        else:
            return self.vectorString[12:13]

    def get_ui(self):
        av = re.search(r'.*UI:(.*?)\/', self.vectorString)
        if av:
            return av.group(1)
        else:
            return self.vectorString[27:28]


class VulnerabilityResponse(BaseModel):
    context: str = Field(alias='@odata.context', default="")
    count: str = Field(alias='@odata.count', default="")
    value: list[Vulnerability]
    nextLink: str = Field(alias='@odata.nextLink', default="")
